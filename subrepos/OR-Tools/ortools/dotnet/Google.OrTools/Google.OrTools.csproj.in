<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <OutputType>Library</OutputType>
    <TargetFramework>netstandard2.0</TargetFramework>
    <RuntimeIdentifiers>win-x64;osx-x64;linux-x64</RuntimeIdentifiers>
    <AssemblyName>Google.OrTools</AssemblyName>
    <Version>@PROJECT_VERSION@</Version>

    <!-- Nuget Properties -->
    <MinClientVersion>4.1.0</MinClientVersion>
    <Description>.NET wrapper for the Operations Research Tools project</Description>
    <NeutralLanguage>en-US</NeutralLanguage>
    <Authors>Laurent Perron</Authors>
    <Company>Google LLC</Company>
    <Copyright>Copyright 2018 Google LLC</Copyright>
    <!-- Pack Option -->
    <Title>Google.OrTools v@PROJECT_VERSION@</Title>
    <PackageId>Google.OrTools</PackageId>
    <PackageTags>native;math;LinearSolver;LinearProgramming;ConstraintSolver;ConstraintProgramming</PackageTags>
    <PackageIconUrl>https://developers.google.com/optimization/images/orLogo.png</PackageIconUrl>
    <PackageProjectUrl>https://developers.google.com/optimization</PackageProjectUrl>
    <PackageLicenseExpression>Apache-2.0</PackageLicenseExpression>
    <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
    <PackageOutputPath>../../../packages</PackageOutputPath>
    <GeneratePackageOnBuild>false</GeneratePackageOnBuild>
    <RepositoryType>git</RepositoryType>
    <RepositoryUrl>https://github.com/google/or-tools</RepositoryUrl>
    <DevelopmentDependency>false</DevelopmentDependency>

    <AssemblyOriginatorKeyFile>../../../bin/or-tools.snk</AssemblyOriginatorKeyFile>
    <SignAssembly>true</SignAssembly>
    <PublicSign Condition="'$(OS)' != 'Windows_NT'">true</PublicSign>

    <!-- Build Properties -->
    <!-- we want to create a Meta-Project only referencing runtime Project(s) -->
    <IncludeBuildOutput>false</IncludeBuildOutput>
    <ProduceReferenceAssembly>false</ProduceReferenceAssembly>
    <UseSharedCompilation>false</UseSharedCompilation>
    <EnableDefaultItems>false</EnableDefaultItems>
  </PropertyGroup>

  <!-- Check at least one reference assembly has been generated -->
  <Target Name="ValidateRuntimeRef" BeforeTargets="Compile">
    <ItemGroup>
      <RefLinux Include="../Google.OrTools.runtime.linux-x64/bin/$(Configuration)/$(TargetFramework)/linux-x64/ref/*.dll" />
      <RefCentosLinux Include="../Google.OrTools.runtime.linux-x64/bin/LINUX/$(Configuration)/$(TargetFramework)/linux-x64/ref/*.dll" />
      <RefOsx Include="../Google.OrTools.runtime.osx-x64/bin/$(Configuration)/$(TargetFramework)/osx-x64/ref/*.dll" />
      <RefWin Include="../Google.OrTools.runtime.win-x64/bin/x64/$(Configuration)/$(TargetFramework)/win-x64/ref/*.dll" />
    </ItemGroup>
    <Message
      Importance="high"
      Text="RefAssembly from Google.OrTools.runtime.linux-x64: found"
      Condition="Exists('@(RefLinux)')" />
    <Message
      Importance="high"
      Text="RefAssembly from Google.OrTools.runtime.linux-x64: not found"
      Condition="!Exists('@(RefLinux)')" />
    <Message
      Importance="high"
      Text="RefAssembly from Google.OrTools.runtime.linux-x64 (CentOs): found"
      Condition="Exists('@(RefCentosLinux)')" />
    <Message
      Importance="high"
      Text="RefAssembly from Google.OrTools.runtime.linux-x64 (CentOs): not found"
      Condition="!Exists('@(RefCentosLinux)')" />
    <Message
      Importance="high"
      Text="RefAssembly from Google.OrTools.runtime.osx-x64: found"
      Condition="Exists('@(RefOsx)')" />
    <Message
      Importance="high"
      Text="RefAssembly from Google.OrTools.runtime.osx-x64: not found"
      Condition="!Exists('@(RefOsx)')" />
    <Message
      Importance="high"
      Text="RefAssembly from Google.OrTools.runtime.win-x64: found"
      Condition="Exists('@(RefWin)')" />
    <Message
      Importance="high"
      Text="RefAssembly from Google.OrTools.runtime.win-x64: not found"
      Condition="!Exists('@(RefWin)')" />
    <Error
      Text="You must locally 'dotnet build' at least one Google.OrTools.runtime.{rid} Project."
      Condition="!Exists('@(RefLinux)') AND !Exists('@(RefOsx)') AND !Exists('@(RefWin)') AND !Exists('@(RefCentosLinux)')" />
  </Target>

  <!-- Need to copy one of the reference assembly generated -->
  <ItemGroup>
    <RefLinux Include="../Google.OrTools.runtime.linux-x64/bin/$(Configuration)/$(TargetFramework)/linux-x64/ref/*.dll" />
    <RefCentosLinux Include="../Google.OrTools.runtime.linux-x64/bin/LINUX/$(Configuration)/$(TargetFramework)/linux-x64/ref/*.dll" />
    <RefOsx Include="../Google.OrTools.runtime.osx-x64/bin/$(Configuration)/$(TargetFramework)/osx-x64/ref/*.dll" />
    <RefWin Include="../Google.OrTools.runtime.win-x64/bin/x64/$(Configuration)/$(TargetFramework)/win-x64/ref/*.dll" />
    <Content
      Include="@(RefLinux)"
      Condition="Exists('@(RefLinux)')">
      <PackagePath>ref/$(TargetFramework)/%(Filename)%(Extension)</PackagePath>
      <Pack>true</Pack>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content
      Include="@(RefCentosLinux)"
      Condition="Exists('@(RefCentosLinux)')">
      <PackagePath>ref/$(TargetFramework)/%(Filename)%(Extension)</PackagePath>
      <Pack>true</Pack>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content
      Include="@(RefOsx)"
      Condition="Exists('@(RefOsx)')">
      <PackagePath>ref/$(TargetFramework)/%(Filename)%(Extension)</PackagePath>
      <Pack>true</Pack>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content
      Include="@(RefWin)"
      Condition="Exists('@(RefWin)')">
      <PackagePath>ref/$(TargetFramework)/%(Filename)%(Extension)</PackagePath>
      <Pack>true</Pack>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
  </ItemGroup>

  <!-- Check at least one runtime package has been generated -->
  <Target Name="ValidateRuntimePack" BeforeTargets="GenerateNuspec">
    <ItemGroup>
      <RuntimeLinux Include="../../../packages/Google.OrTools.runtime.linux-x64.*.nupkg" />
      <RuntimeOsx Include="../../../packages/Google.OrTools.runtime.osx-x64.*.nupkg" />
      <RuntimeWin Include="../../../packages/Google.OrTools.runtime.win-x64.*.nupkg" />
    </ItemGroup>
    <Message
      Importance="high"
      Text="Package Google.OrTools.runtime.linux-x64: found"
      Condition="Exists('@(RuntimeLinux)')" />
    <Message
      Importance="high"
      Text="Package Google.OrTools.runtime.linux-x64: not found"
      Condition="!Exists('@(RuntimeLinux)')" />
    <Message
      Importance="high"
      Text="Package Google.OrTools.runtime.osx-x64: found"
      Condition="Exists('@(RuntimeOsx)')" />
    <Message
      Importance="high"
      Text="Package Google.OrTools.runtime.osx-x64: not found"
      Condition="!Exists('@(RuntimeOsx)')" />
    <Message
      Importance="high"
      Text="Package Google.OrTools.runtime.win-x64: found"
      Condition="Exists('@(RuntimeWin)')" />
    <Message
      Importance="high"
      Text="Package Google.OrTools.runtime.win-x64: not found"
      Condition="!Exists('@(RuntimeWin)')" />
    <Error
      Text="You must locally 'dotnet pack' at least one Google.OrTools.runtime.{rid} Project."
      Condition="!Exists('@(RuntimeLinux)') AND !Exists('@(RuntimeOsx)') AND !Exists('@(RuntimeWin)')" />
  </Target>

  <!-- Copy all .proto file(s) -->
  <ItemGroup>
    <Content Include="../../algorithms/*.proto">
      <PackagePath>content/algorithms</PackagePath>
      <Pack>true</Pack>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Include="../../graph/*.proto">
      <PackagePath>content/graph</PackagePath>
      <Pack>true</Pack>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Include="../../linear_solver/*.proto">
      <PackagePath>content/linear_solver</PackagePath>
      <Pack>true</Pack>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Include="../../bop/*.proto">
      <PackagePath>content/bop</PackagePath>
      <Pack>true</Pack>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Include="../../glop/*.proto">
      <PackagePath>content/glop</PackagePath>
      <Pack>true</Pack>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Include="../../constraint_solver/*.proto">
      <PackagePath>content/constraint_solver</PackagePath>
      <Pack>true</Pack>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Include="../../sat/*.proto">
      <PackagePath>content/sat</PackagePath>
      <Pack>true</Pack>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Include="../../util/*.proto">
      <PackagePath>content/util</PackagePath>
      <Pack>true</Pack>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Include="../../data/*.proto">
      <PackagePath>content/data</PackagePath>
      <Pack>true</Pack>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
  </ItemGroup>

  <!-- Need to add some dependencies so Meta-Project will pull runtime Project(s) -->
  <PropertyGroup>
    <RestoreSources>../../../packages;$(RestoreSources);https://api.nuget.org/v3/index.json</RestoreSources>
  </PropertyGroup>
  <ItemGroup Condition="Exists('../../../packages/Google.OrTools.runtime.linux-x64.@PROJECT_VERSION@.nupkg')">
    <PackageReference Include="Google.OrTools.runtime.linux-x64" Version="@PROJECT_VERSION@" />
  </ItemGroup>
  <ItemGroup Condition="Exists('../../../packages/Google.OrTools.runtime.osx-x64.@PROJECT_VERSION@.nupkg')">
    <PackageReference Include="Google.OrTools.runtime.osx-x64" Version="@PROJECT_VERSION@" />
  </ItemGroup>
  <ItemGroup Condition="Exists('../../../packages/Google.OrTools.runtime.win-x64.@PROJECT_VERSION@.nupkg')">
    <PackageReference Include="Google.OrTools.runtime.win-x64" Version="@PROJECT_VERSION@" />
  </ItemGroup>

  <ItemGroup>
    <RuntimeLinux Include="../../../packages/Google.OrTools.runtime.linux-x64.*.nupkg" />
    <RuntimeOsx Include="../../../packages/Google.OrTools.runtime.osx-x64.*.nupkg" />
    <RuntimeWin Include="../../../packages/Google.OrTools.runtime.win-x64.*.nupkg" />
    <Content
      Include="runtime.json"
      Condition="Exists('@(RuntimeLinux)') AND Exists('@(RuntimeOsx)') AND Exists('@(RuntimeWin)')">
      <PackagePath>runtime.json</PackagePath>
      <Pack>true</Pack>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
  </ItemGroup>
</Project>
